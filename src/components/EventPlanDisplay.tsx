
import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";

interface EventPlanDisplayProps {
  eventPlan: string;
}

const EventPlanDisplay: React.FC<EventPlanDisplayProps> = ({ eventPlan }) => {
  // Parse the event plan and format it nicely
  const formatEventPlan = (plan: string) => {
    // Split the plan into sections based on common patterns
    const sections = plan.split(/(?=(?:Venue|Catering|Promotion|Logistics|Feedback|Budget|Timeline|Decoration|Entertainment))/i);
    
    return sections.filter(section => section.trim().length > 0);
  };

  const getSectionIcon = (content: string) => {
    const lowerContent = content.toLowerCase();
    if (lowerContent.includes('venue')) return '📍';
    if (lowerContent.includes('catering') || lowerContent.includes('food')) return '🍽️';
    if (lowerContent.includes('promotion') || lowerContent.includes('marketing')) return '📢';
    if (lowerContent.includes('logistics') || lowerContent.includes('transport')) return '📦';
    if (lowerContent.includes('feedback') || lowerContent.includes('survey')) return '📊';
    if (lowerContent.includes('budget') || lowerContent.includes('cost')) return '💰';
    if (lowerContent.includes('decoration') || lowerContent.includes('decor')) return '🎨';
    if (lowerContent.includes('entertainment') || lowerContent.includes('music')) return '🎵';
    if (lowerContent.includes('timeline') || lowerContent.includes('schedule')) return '⏰';
    return '✨';
  };

  const sections = formatEventPlan(eventPlan);

  return (
    <Card className="shadow-2xl border-0 bg-white/80 backdrop-blur-sm">
      <CardHeader className="text-center pb-6">
        <CardTitle className="text-3xl font-bold bg-gradient-to-r from-green-600 to-teal-600 bg-clip-text text-transparent">
          🎉 Your Personalized Event Plan
        </CardTitle>
        <Badge variant="secondary" className="mx-auto mt-2 bg-green-100 text-green-800">
          Generated by AI Agents
        </Badge>
      </CardHeader>
      
      <CardContent>
        {sections.length > 1 ? (
          <div className="grid gap-6">
            {sections.map((section, index) => {
              const lines = section.trim().split('\n');
              const title = lines[0];
              const content = lines.slice(1).join('\n');
              
              return (
                <Card key={index} className="border-l-4 border-l-purple-500 bg-gradient-to-r from-purple-50 to-blue-50">
                  <CardHeader className="pb-3">
                    <CardTitle className="text-lg font-semibold text-gray-800 flex items-center gap-2">
                      <span className="text-2xl">{getSectionIcon(section)}</span>
                      {title}
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="pt-0">
                    <div className="text-gray-700 whitespace-pre-line leading-relaxed">
                      {content}
                    </div>
                  </CardContent>
                </Card>
              );
            })}
          </div>
        ) : (
          <div className="bg-gradient-to-r from-purple-50 to-blue-50 rounded-lg p-6">
            <div className="text-gray-700 whitespace-pre-line leading-relaxed">
              {eventPlan}
            </div>
          </div>
        )}
        
        <div className="mt-8 p-4 bg-gradient-to-r from-green-100 to-teal-100 rounded-lg">
          <p className="text-sm text-gray-600 text-center">
            <strong>💡 Pro Tip:</strong> This plan is customized based on your specific requirements. 
            Feel free to modify any suggestions to better suit your needs!
          </p>
        </div>
      </CardContent>
    </Card>
  );
};

export default EventPlanDisplay;
